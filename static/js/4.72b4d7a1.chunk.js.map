{"version":3,"sources":["components/Movies/MovieDetails/MovieDetails.js"],"names":["MovieDetails","props","useState","location","state","movie","loaded","setLoaded","renderDetails","style","fontSize","color","position","left","top","className","src","poster_path","alt","title","original_name","moment","release_date","format","adult","original_language","toUpperCase","rating","vote_average","vote_count","overview","textAlign","marginTop","backdrop_path","onLoad"],"mappings":"8MAmFeA,UA5EM,SAACC,GAAW,IAAD,EACdC,mBAASD,EAAME,SAASC,MAAQH,EAAME,SAASC,MAAMC,MAAQ,MAAtEA,EADuB,sBAEFH,oBAAS,GAFP,mBAEvBI,EAFuB,KAEfC,EAFe,KAI1BC,EAAgB,qBAAKC,MAAO,CAACC,SAAU,OAAQC,MAAO,OAAQC,SAAU,WAAYC,KAAM,MAAOC,IAAK,OAAtF,mCAmEpB,OAjEIT,IACFG,EACE,qBAAKO,UAAU,UAAf,SACA,sBAAKA,UAAU,iBAAf,UACGT,GACC,mCACE,sBAAKS,UAAU,6BAAf,UACE,qBAAKA,UAAU,sCAAf,SACE,qBACEA,UAAU,2CACVC,IAAG,yCAAoCX,EAAMY,aAC7CC,IAAKb,EAAMc,UAGf,sBAAKJ,UAAU,oCAAf,UACE,8BACGV,EAAMc,MAAQd,EAAMc,MAAQd,EAAMe,cADrC,KACsDC,IAAOhB,EAAMiB,cAAcC,OAAO,QADxF,OAGA,sBAAKR,UAAU,0CAAf,UACE,4BACGV,EAAMmB,MAAQ,MAAQ,QAEzB,kCACA,4BACGnB,EAAMoB,kBAAkBC,gBAE3B,kCACA,qBAAKX,UAAU,gDAAf,SACE,cAAC,IAAD,CAAaY,OAAQtB,EAAMuB,oBAG/B,sBAAKb,UAAU,6CAAf,UACE,sBAAKA,UAAU,oDAAf,UACE,wCAAWV,EAAMuB,gBACjB,+CAAkBvB,EAAMwB,iBAE1B,qBACEd,UAAU,qDADZ,SAGE,4BAAIV,EAAMyB,aAGZ,qBAAKrB,MAAO,CAAEsB,UAAW,SAAUC,UAAW,QAA9C,SACE,0CACYX,IAAOhB,EAAMiB,cAAcC,OAAO,8BAQ1D,qBACER,UAAU,sBACVC,IAAG,0CAAqCX,EAAM4B,eAC9Cf,IAAKb,EAAMc,MACXe,OAAQ,WACN3B,GAAU,YASlB,8BAAMC","file":"static/js/4.72b4d7a1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport StarsRating from \"../StarsRating/StarsRating\";\r\n\r\nimport moment from \"moment\";\r\n\r\n\r\nconst MovieDetails = (props) => {\r\n  const [movie] = useState(props.location.state ? props.location.state.movie : null);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  let renderDetails = <div style={{fontSize: \"20px\", color: \"#fff\", position: \"absolute\", left: \"50%\", top: \"50%\"}}>OH! An error ocurred!</div>\r\n\r\n  if (movie) {\r\n    renderDetails = (\r\n      <div className=\"content\">\r\n      <div className=\"content__image\">\r\n        {loaded && (\r\n          <>\r\n            <div className=\"content__image__background\">\r\n              <div className=\"content__image__background__details\">\r\n                <img\r\n                  className=\"content__image__background__details__img\"\r\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                  alt={movie.title}\r\n                />\r\n              </div>\r\n              <div className=\"content__image__background__movie\">\r\n                <p>\r\n                  {movie.title ? movie.title : movie.original_name} ({moment(movie.release_date).format(\"YYYY\")})\r\n                </p>\r\n                <div className=\"content__image__background__movie__info\">\r\n                  <p>\r\n                    {movie.adult ? \"+18\" : \"+13\"}\r\n                  </p>\r\n                  <p>|</p>\r\n                  <p>\r\n                    {movie.original_language.toUpperCase()}\r\n                  </p>\r\n                  <p>|</p>\r\n                  <div className=\"content__image__background__movie__info__star\">\r\n                    <StarsRating rating={movie.vote_average} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"content__image__background__movie__details\">\r\n                  <div className=\"content__image__background__movie__details__first\">\r\n                    <p>Votes: {movie.vote_average}</p>\r\n                    <p>Amount Votes: {movie.vote_count}</p>\r\n                  </div>\r\n                  <div\r\n                    className=\"content__image__background__movie__details__second\"\r\n                  >\r\n                    <p>{movie.overview}</p>\r\n                  </div>\r\n\r\n                  <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n                    <p>\r\n                      Release: {moment(movie.release_date).format(\"DD-MM-YYYY\")}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        <img\r\n          className=\"content__image__img\"\r\n          src={`https://image.tmdb.org/t/p/w1280${movie.backdrop_path}`}\r\n          alt={movie.title}\r\n          onLoad={() => {\r\n            setLoaded(true);\r\n          }}\r\n        />\r\n      </div>\r\n{/*       {loaded && <div className={style.content_movie_details}></div>} */}\r\n    </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>{renderDetails}</div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"sourceRoot":""}